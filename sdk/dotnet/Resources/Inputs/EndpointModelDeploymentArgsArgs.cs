// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Davidmontoyago.GcpVertexModelDeployment.Resources.Inputs
{

    public sealed class EndpointModelDeploymentArgsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Accelerator count for deployment
        /// </summary>
        [Input("acceleratorCount")]
        public Input<int>? AcceleratorCount { get; set; }

        /// <summary>
        /// Accelerator type for endpoint deployment. Defaults to ACCELERATOR_TYPE_UNSPECIFIED. E.g.: NVIDIA_TESLA_P4, NVIDIA_TESLA_T4
        /// </summary>
        [Input("acceleratorType")]
        public Input<string>? AcceleratorType { get; set; }

        /// <summary>
        /// Disable container logging
        /// </summary>
        [Input("disableContainerLogging")]
        public Input<bool>? DisableContainerLogging { get; set; }

        /// <summary>
        /// Enable access logging
        /// </summary>
        [Input("enableAccessLogging")]
        public Input<bool>? EnableAccessLogging { get; set; }

        /// <summary>
        /// Enable spot VMs
        /// </summary>
        [Input("enableSpotVMs")]
        public Input<bool>? EnableSpotVMs { get; set; }

        /// <summary>
        /// Vertex AI Endpoint ID
        /// </summary>
        [Input("endpointId", required: true)]
        public Input<string> EndpointId { get; set; } = null!;

        /// <summary>
        /// Machine type for deployment
        /// </summary>
        [Input("machineType")]
        public Input<string>? MachineType { get; set; }

        /// <summary>
        /// Maximum number of replicas
        /// </summary>
        [Input("maxReplicas")]
        public Input<int>? MaxReplicas { get; set; }

        /// <summary>
        /// Minimum number of replicas
        /// </summary>
        [Input("minReplicas")]
        public Input<int>? MinReplicas { get; set; }

        /// <summary>
        /// Traffic percentage for this deployment
        /// </summary>
        [Input("trafficPercent")]
        public Input<int>? TrafficPercent { get; set; }

        public EndpointModelDeploymentArgsArgs()
        {
            MachineType = "n1-standard-8";
            MaxReplicas = 3;
            MinReplicas = 1;
            TrafficPercent = 100;
        }
        public static new EndpointModelDeploymentArgsArgs Empty => new EndpointModelDeploymentArgsArgs();
    }
}
