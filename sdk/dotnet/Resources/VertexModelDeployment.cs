// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Davidmontoyago.GcpVertexModelDeployment.Resources
{
    /// <summary>
    /// Deploys a model to a Vertex AI endpoint
    /// </summary>
    [GcpVertexModelDeploymentResourceType("gcp-vertex-model-deployment:resources:VertexModelDeployment")]
    public partial class VertexModelDeployment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Creation timestamp
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// ID of the deployed model
        /// </summary>
        [Output("deployedModelId")]
        public Output<string> DeployedModelId { get; private set; } = null!;

        /// <summary>
        /// Configuration for deploying the model to a Vertex AI endpoint. Leave empty to upload model only for batched predictions.
        /// </summary>
        [Output("endpointModelDeployment")]
        public Output<Outputs.EndpointModelDeploymentArgs?> EndpointModelDeployment { get; private set; } = null!;

        /// <summary>
        /// Full name of the endpoint
        /// </summary>
        [Output("endpointName")]
        public Output<string> EndpointName { get; private set; } = null!;

        /// <summary>
        /// Labels for the deployment
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Bucket URI to the model artifacts. For instance, gs://my-bucket/my-model-artifacts/ - See: https://cloud.google.com/vertex-ai/docs/training/exporting-model-artifacts
        /// </summary>
        [Output("modelArtifactsBucketUri")]
        public Output<string> ModelArtifactsBucketUri { get; private set; } = null!;

        /// <summary>
        /// Vertex AI Image URL of a custom or prebuilt container model server. See: https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers
        /// </summary>
        [Output("modelImageUrl")]
        public Output<string> ModelImageUrl { get; private set; } = null!;

        [Output("modelName")]
        public Output<string> ModelName { get; private set; } = null!;

        /// <summary>
        /// Bucket URI to the schema for the model inference behavior
        /// </summary>
        [Output("modelPredictionBehaviorSchemaUri")]
        public Output<string?> ModelPredictionBehaviorSchemaUri { get; private set; } = null!;

        /// <summary>
        /// Bucket URI to the schema for the model input
        /// </summary>
        [Output("modelPredictionInputSchemaUri")]
        public Output<string> ModelPredictionInputSchemaUri { get; private set; } = null!;

        /// <summary>
        /// Bucket URI to the schema for the model output
        /// </summary>
        [Output("modelPredictionOutputSchemaUri")]
        public Output<string> ModelPredictionOutputSchemaUri { get; private set; } = null!;

        /// <summary>
        /// Google Cloud Project ID
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// Google Cloud region
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Service account for the model. If ModelImage is pointing to a private registry, this service account must have read access to the registry.
        /// </summary>
        [Output("serviceAccount")]
        public Output<string> ServiceAccount { get; private set; } = null!;


        /// <summary>
        /// Create a VertexModelDeployment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VertexModelDeployment(string name, VertexModelDeploymentArgs args, CustomResourceOptions? options = null)
            : base("gcp-vertex-model-deployment:resources:VertexModelDeployment", name, args ?? new VertexModelDeploymentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VertexModelDeployment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("gcp-vertex-model-deployment:resources:VertexModelDeployment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/davidmontoyago/pulumi-gcp-vertex-model-deployment",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VertexModelDeployment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VertexModelDeployment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VertexModelDeployment(name, id, options);
        }
    }

    public sealed class VertexModelDeploymentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration for deploying the model to a Vertex AI endpoint. Leave empty to upload model only for batched predictions.
        /// </summary>
        [Input("endpointModelDeployment")]
        public Input<Inputs.EndpointModelDeploymentArgsArgs>? EndpointModelDeployment { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels for the deployment
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Bucket URI to the model artifacts. For instance, gs://my-bucket/my-model-artifacts/ - See: https://cloud.google.com/vertex-ai/docs/training/exporting-model-artifacts
        /// </summary>
        [Input("modelArtifactsBucketUri", required: true)]
        public Input<string> ModelArtifactsBucketUri { get; set; } = null!;

        /// <summary>
        /// Vertex AI Image URL of a custom or prebuilt container model server. See: https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers
        /// </summary>
        [Input("modelImageUrl", required: true)]
        public Input<string> ModelImageUrl { get; set; } = null!;

        /// <summary>
        /// Bucket URI to the schema for the model inference behavior
        /// </summary>
        [Input("modelPredictionBehaviorSchemaUri")]
        public Input<string>? ModelPredictionBehaviorSchemaUri { get; set; }

        /// <summary>
        /// Bucket URI to the schema for the model input
        /// </summary>
        [Input("modelPredictionInputSchemaUri", required: true)]
        public Input<string> ModelPredictionInputSchemaUri { get; set; } = null!;

        /// <summary>
        /// Bucket URI to the schema for the model output
        /// </summary>
        [Input("modelPredictionOutputSchemaUri", required: true)]
        public Input<string> ModelPredictionOutputSchemaUri { get; set; } = null!;

        /// <summary>
        /// Google Cloud Project ID
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// Google Cloud region
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// Service account for the model. If ModelImage is pointing to a private registry, this service account must have read access to the registry.
        /// </summary>
        [Input("serviceAccount", required: true)]
        public Input<string> ServiceAccount { get; set; } = null!;

        public VertexModelDeploymentArgs()
        {
        }
        public static new VertexModelDeploymentArgs Empty => new VertexModelDeploymentArgs();
    }
}
