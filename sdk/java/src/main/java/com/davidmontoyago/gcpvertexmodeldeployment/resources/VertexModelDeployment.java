// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.davidmontoyago.gcpvertexmodeldeployment.resources;

import com.davidmontoyago.gcpvertexmodeldeployment.Utilities;
import com.davidmontoyago.gcpvertexmodeldeployment.resources.VertexModelDeploymentArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Deploys a model to a Vertex AI endpoint
 * 
 */
@ResourceType(type="gcp-vertex-model-deployment:resources:VertexModelDeployment")
public class VertexModelDeployment extends com.pulumi.resources.CustomResource {
    /**
     * Creation timestamp
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return Creation timestamp
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * ID of the deployed model
     * 
     */
    @Export(name="deployedModelId", refs={String.class}, tree="[0]")
    private Output<String> deployedModelId;

    /**
     * @return ID of the deployed model
     * 
     */
    public Output<String> deployedModelId() {
        return this.deployedModelId;
    }
    /**
     * Vertex AI Endpoint ID
     * 
     */
    @Export(name="endpointId", refs={String.class}, tree="[0]")
    private Output<String> endpointId;

    /**
     * @return Vertex AI Endpoint ID
     * 
     */
    public Output<String> endpointId() {
        return this.endpointId;
    }
    /**
     * Full name of the endpoint
     * 
     */
    @Export(name="endpointName", refs={String.class}, tree="[0]")
    private Output<String> endpointName;

    /**
     * @return Full name of the endpoint
     * 
     */
    public Output<String> endpointName() {
        return this.endpointName;
    }
    /**
     * Labels for the deployment
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Labels for the deployment
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Machine type for deployment
     * 
     */
    @Export(name="machineType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> machineType;

    /**
     * @return Machine type for deployment
     * 
     */
    public Output<Optional<String>> machineType() {
        return Codegen.optional(this.machineType);
    }
    /**
     * Maximum number of replicas
     * 
     */
    @Export(name="maxReplicas", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> maxReplicas;

    /**
     * @return Maximum number of replicas
     * 
     */
    public Output<Optional<Integer>> maxReplicas() {
        return Codegen.optional(this.maxReplicas);
    }
    /**
     * Minimum number of replicas
     * 
     */
    @Export(name="minReplicas", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> minReplicas;

    /**
     * @return Minimum number of replicas
     * 
     */
    public Output<Optional<Integer>> minReplicas() {
        return Codegen.optional(this.minReplicas);
    }
    /**
     * Bucket URI to the model artifacts. For instance, gs://my-bucket/my-model-artifacts/ - See: https://cloud.google.com/vertex-ai/docs/training/exporting-model-artifacts
     * 
     */
    @Export(name="modelArtifactsBucketUri", refs={String.class}, tree="[0]")
    private Output<String> modelArtifactsBucketUri;

    /**
     * @return Bucket URI to the model artifacts. For instance, gs://my-bucket/my-model-artifacts/ - See: https://cloud.google.com/vertex-ai/docs/training/exporting-model-artifacts
     * 
     */
    public Output<String> modelArtifactsBucketUri() {
        return this.modelArtifactsBucketUri;
    }
    /**
     * Vertex AI Image URL of a custom or prebuilt container model server. See: https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers
     * 
     */
    @Export(name="modelImageUrl", refs={String.class}, tree="[0]")
    private Output<String> modelImageUrl;

    /**
     * @return Vertex AI Image URL of a custom or prebuilt container model server. See: https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers
     * 
     */
    public Output<String> modelImageUrl() {
        return this.modelImageUrl;
    }
    /**
     * Bucket URI to the schema for the model inference behavior
     * 
     */
    @Export(name="modelPredictionBehaviorSchemaUri", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> modelPredictionBehaviorSchemaUri;

    /**
     * @return Bucket URI to the schema for the model inference behavior
     * 
     */
    public Output<Optional<String>> modelPredictionBehaviorSchemaUri() {
        return Codegen.optional(this.modelPredictionBehaviorSchemaUri);
    }
    /**
     * Bucket URI to the schema for the model input
     * 
     */
    @Export(name="modelPredictionInputSchemaUri", refs={String.class}, tree="[0]")
    private Output<String> modelPredictionInputSchemaUri;

    /**
     * @return Bucket URI to the schema for the model input
     * 
     */
    public Output<String> modelPredictionInputSchemaUri() {
        return this.modelPredictionInputSchemaUri;
    }
    /**
     * Bucket URI to the schema for the model output
     * 
     */
    @Export(name="modelPredictionOutputSchemaUri", refs={String.class}, tree="[0]")
    private Output<String> modelPredictionOutputSchemaUri;

    /**
     * @return Bucket URI to the schema for the model output
     * 
     */
    public Output<String> modelPredictionOutputSchemaUri() {
        return this.modelPredictionOutputSchemaUri;
    }
    /**
     * Google Cloud Project ID
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output<String> projectId;

    /**
     * @return Google Cloud Project ID
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * Google Cloud region
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Google Cloud region
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Service account for the deployment
     * 
     */
    @Export(name="serviceAccount", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> serviceAccount;

    /**
     * @return Service account for the deployment
     * 
     */
    public Output<Optional<String>> serviceAccount() {
        return Codegen.optional(this.serviceAccount);
    }
    /**
     * Traffic percentage for this deployment
     * 
     */
    @Export(name="trafficPercent", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> trafficPercent;

    /**
     * @return Traffic percentage for this deployment
     * 
     */
    public Output<Optional<Integer>> trafficPercent() {
        return Codegen.optional(this.trafficPercent);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VertexModelDeployment(java.lang.String name) {
        this(name, VertexModelDeploymentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VertexModelDeployment(java.lang.String name, VertexModelDeploymentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VertexModelDeployment(java.lang.String name, VertexModelDeploymentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp-vertex-model-deployment:resources:VertexModelDeployment", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private VertexModelDeployment(java.lang.String name, Output<java.lang.String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp-vertex-model-deployment:resources:VertexModelDeployment", name, null, makeResourceOptions(options, id), false);
    }

    private static VertexModelDeploymentArgs makeArgs(VertexModelDeploymentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? VertexModelDeploymentArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/davidmontoyago/pulumi-gcp-vertex-model-deployment")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VertexModelDeployment get(java.lang.String name, Output<java.lang.String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VertexModelDeployment(name, id, options);
    }
}
