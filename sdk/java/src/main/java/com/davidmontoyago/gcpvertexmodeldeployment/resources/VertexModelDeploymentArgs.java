// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.davidmontoyago.gcpvertexmodeldeployment.resources;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VertexModelDeploymentArgs extends com.pulumi.resources.ResourceArgs {

    public static final VertexModelDeploymentArgs Empty = new VertexModelDeploymentArgs();

    /**
     * Vertex AI Endpoint ID
     * 
     */
    @Import(name="endpointId", required=true)
    private Output<String> endpointId;

    /**
     * @return Vertex AI Endpoint ID
     * 
     */
    public Output<String> endpointId() {
        return this.endpointId;
    }

    /**
     * Labels for the deployment
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Labels for the deployment
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Machine type for deployment
     * 
     */
    @Import(name="machineType")
    private @Nullable Output<String> machineType;

    /**
     * @return Machine type for deployment
     * 
     */
    public Optional<Output<String>> machineType() {
        return Optional.ofNullable(this.machineType);
    }

    /**
     * Maximum number of replicas
     * 
     */
    @Import(name="maxReplicas")
    private @Nullable Output<Integer> maxReplicas;

    /**
     * @return Maximum number of replicas
     * 
     */
    public Optional<Output<Integer>> maxReplicas() {
        return Optional.ofNullable(this.maxReplicas);
    }

    /**
     * Minimum number of replicas
     * 
     */
    @Import(name="minReplicas")
    private @Nullable Output<Integer> minReplicas;

    /**
     * @return Minimum number of replicas
     * 
     */
    public Optional<Output<Integer>> minReplicas() {
        return Optional.ofNullable(this.minReplicas);
    }

    /**
     * Bucket URI to the model artifacts. For instance, gs://my-bucket/my-model-artifacts/ - See: https://cloud.google.com/vertex-ai/docs/training/exporting-model-artifacts
     * 
     */
    @Import(name="modelArtifactsBucketUri", required=true)
    private Output<String> modelArtifactsBucketUri;

    /**
     * @return Bucket URI to the model artifacts. For instance, gs://my-bucket/my-model-artifacts/ - See: https://cloud.google.com/vertex-ai/docs/training/exporting-model-artifacts
     * 
     */
    public Output<String> modelArtifactsBucketUri() {
        return this.modelArtifactsBucketUri;
    }

    /**
     * Vertex AI Image URL of a custom or prebuilt container model server. See: https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers
     * 
     */
    @Import(name="modelImageUrl", required=true)
    private Output<String> modelImageUrl;

    /**
     * @return Vertex AI Image URL of a custom or prebuilt container model server. See: https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers
     * 
     */
    public Output<String> modelImageUrl() {
        return this.modelImageUrl;
    }

    /**
     * Bucket URI to the schema for the model inference behavior
     * 
     */
    @Import(name="modelPredictionBehaviorSchemaUri")
    private @Nullable Output<String> modelPredictionBehaviorSchemaUri;

    /**
     * @return Bucket URI to the schema for the model inference behavior
     * 
     */
    public Optional<Output<String>> modelPredictionBehaviorSchemaUri() {
        return Optional.ofNullable(this.modelPredictionBehaviorSchemaUri);
    }

    /**
     * Bucket URI to the schema for the model input
     * 
     */
    @Import(name="modelPredictionInputSchemaUri", required=true)
    private Output<String> modelPredictionInputSchemaUri;

    /**
     * @return Bucket URI to the schema for the model input
     * 
     */
    public Output<String> modelPredictionInputSchemaUri() {
        return this.modelPredictionInputSchemaUri;
    }

    /**
     * Bucket URI to the schema for the model output
     * 
     */
    @Import(name="modelPredictionOutputSchemaUri", required=true)
    private Output<String> modelPredictionOutputSchemaUri;

    /**
     * @return Bucket URI to the schema for the model output
     * 
     */
    public Output<String> modelPredictionOutputSchemaUri() {
        return this.modelPredictionOutputSchemaUri;
    }

    /**
     * Google Cloud Project ID
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return Google Cloud Project ID
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * Google Cloud region
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return Google Cloud region
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    /**
     * Service account for the deployment
     * 
     */
    @Import(name="serviceAccount")
    private @Nullable Output<String> serviceAccount;

    /**
     * @return Service account for the deployment
     * 
     */
    public Optional<Output<String>> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }

    /**
     * Traffic percentage for this deployment
     * 
     */
    @Import(name="trafficPercent")
    private @Nullable Output<Integer> trafficPercent;

    /**
     * @return Traffic percentage for this deployment
     * 
     */
    public Optional<Output<Integer>> trafficPercent() {
        return Optional.ofNullable(this.trafficPercent);
    }

    private VertexModelDeploymentArgs() {}

    private VertexModelDeploymentArgs(VertexModelDeploymentArgs $) {
        this.endpointId = $.endpointId;
        this.labels = $.labels;
        this.machineType = $.machineType;
        this.maxReplicas = $.maxReplicas;
        this.minReplicas = $.minReplicas;
        this.modelArtifactsBucketUri = $.modelArtifactsBucketUri;
        this.modelImageUrl = $.modelImageUrl;
        this.modelPredictionBehaviorSchemaUri = $.modelPredictionBehaviorSchemaUri;
        this.modelPredictionInputSchemaUri = $.modelPredictionInputSchemaUri;
        this.modelPredictionOutputSchemaUri = $.modelPredictionOutputSchemaUri;
        this.projectId = $.projectId;
        this.region = $.region;
        this.serviceAccount = $.serviceAccount;
        this.trafficPercent = $.trafficPercent;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VertexModelDeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VertexModelDeploymentArgs $;

        public Builder() {
            $ = new VertexModelDeploymentArgs();
        }

        public Builder(VertexModelDeploymentArgs defaults) {
            $ = new VertexModelDeploymentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endpointId Vertex AI Endpoint ID
         * 
         * @return builder
         * 
         */
        public Builder endpointId(Output<String> endpointId) {
            $.endpointId = endpointId;
            return this;
        }

        /**
         * @param endpointId Vertex AI Endpoint ID
         * 
         * @return builder
         * 
         */
        public Builder endpointId(String endpointId) {
            return endpointId(Output.of(endpointId));
        }

        /**
         * @param labels Labels for the deployment
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels for the deployment
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param machineType Machine type for deployment
         * 
         * @return builder
         * 
         */
        public Builder machineType(@Nullable Output<String> machineType) {
            $.machineType = machineType;
            return this;
        }

        /**
         * @param machineType Machine type for deployment
         * 
         * @return builder
         * 
         */
        public Builder machineType(String machineType) {
            return machineType(Output.of(machineType));
        }

        /**
         * @param maxReplicas Maximum number of replicas
         * 
         * @return builder
         * 
         */
        public Builder maxReplicas(@Nullable Output<Integer> maxReplicas) {
            $.maxReplicas = maxReplicas;
            return this;
        }

        /**
         * @param maxReplicas Maximum number of replicas
         * 
         * @return builder
         * 
         */
        public Builder maxReplicas(Integer maxReplicas) {
            return maxReplicas(Output.of(maxReplicas));
        }

        /**
         * @param minReplicas Minimum number of replicas
         * 
         * @return builder
         * 
         */
        public Builder minReplicas(@Nullable Output<Integer> minReplicas) {
            $.minReplicas = minReplicas;
            return this;
        }

        /**
         * @param minReplicas Minimum number of replicas
         * 
         * @return builder
         * 
         */
        public Builder minReplicas(Integer minReplicas) {
            return minReplicas(Output.of(minReplicas));
        }

        /**
         * @param modelArtifactsBucketUri Bucket URI to the model artifacts. For instance, gs://my-bucket/my-model-artifacts/ - See: https://cloud.google.com/vertex-ai/docs/training/exporting-model-artifacts
         * 
         * @return builder
         * 
         */
        public Builder modelArtifactsBucketUri(Output<String> modelArtifactsBucketUri) {
            $.modelArtifactsBucketUri = modelArtifactsBucketUri;
            return this;
        }

        /**
         * @param modelArtifactsBucketUri Bucket URI to the model artifacts. For instance, gs://my-bucket/my-model-artifacts/ - See: https://cloud.google.com/vertex-ai/docs/training/exporting-model-artifacts
         * 
         * @return builder
         * 
         */
        public Builder modelArtifactsBucketUri(String modelArtifactsBucketUri) {
            return modelArtifactsBucketUri(Output.of(modelArtifactsBucketUri));
        }

        /**
         * @param modelImageUrl Vertex AI Image URL of a custom or prebuilt container model server. See: https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers
         * 
         * @return builder
         * 
         */
        public Builder modelImageUrl(Output<String> modelImageUrl) {
            $.modelImageUrl = modelImageUrl;
            return this;
        }

        /**
         * @param modelImageUrl Vertex AI Image URL of a custom or prebuilt container model server. See: https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers
         * 
         * @return builder
         * 
         */
        public Builder modelImageUrl(String modelImageUrl) {
            return modelImageUrl(Output.of(modelImageUrl));
        }

        /**
         * @param modelPredictionBehaviorSchemaUri Bucket URI to the schema for the model inference behavior
         * 
         * @return builder
         * 
         */
        public Builder modelPredictionBehaviorSchemaUri(@Nullable Output<String> modelPredictionBehaviorSchemaUri) {
            $.modelPredictionBehaviorSchemaUri = modelPredictionBehaviorSchemaUri;
            return this;
        }

        /**
         * @param modelPredictionBehaviorSchemaUri Bucket URI to the schema for the model inference behavior
         * 
         * @return builder
         * 
         */
        public Builder modelPredictionBehaviorSchemaUri(String modelPredictionBehaviorSchemaUri) {
            return modelPredictionBehaviorSchemaUri(Output.of(modelPredictionBehaviorSchemaUri));
        }

        /**
         * @param modelPredictionInputSchemaUri Bucket URI to the schema for the model input
         * 
         * @return builder
         * 
         */
        public Builder modelPredictionInputSchemaUri(Output<String> modelPredictionInputSchemaUri) {
            $.modelPredictionInputSchemaUri = modelPredictionInputSchemaUri;
            return this;
        }

        /**
         * @param modelPredictionInputSchemaUri Bucket URI to the schema for the model input
         * 
         * @return builder
         * 
         */
        public Builder modelPredictionInputSchemaUri(String modelPredictionInputSchemaUri) {
            return modelPredictionInputSchemaUri(Output.of(modelPredictionInputSchemaUri));
        }

        /**
         * @param modelPredictionOutputSchemaUri Bucket URI to the schema for the model output
         * 
         * @return builder
         * 
         */
        public Builder modelPredictionOutputSchemaUri(Output<String> modelPredictionOutputSchemaUri) {
            $.modelPredictionOutputSchemaUri = modelPredictionOutputSchemaUri;
            return this;
        }

        /**
         * @param modelPredictionOutputSchemaUri Bucket URI to the schema for the model output
         * 
         * @return builder
         * 
         */
        public Builder modelPredictionOutputSchemaUri(String modelPredictionOutputSchemaUri) {
            return modelPredictionOutputSchemaUri(Output.of(modelPredictionOutputSchemaUri));
        }

        /**
         * @param projectId Google Cloud Project ID
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Google Cloud Project ID
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param region Google Cloud region
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Google Cloud region
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param serviceAccount Service account for the deployment
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(@Nullable Output<String> serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        /**
         * @param serviceAccount Service account for the deployment
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(String serviceAccount) {
            return serviceAccount(Output.of(serviceAccount));
        }

        /**
         * @param trafficPercent Traffic percentage for this deployment
         * 
         * @return builder
         * 
         */
        public Builder trafficPercent(@Nullable Output<Integer> trafficPercent) {
            $.trafficPercent = trafficPercent;
            return this;
        }

        /**
         * @param trafficPercent Traffic percentage for this deployment
         * 
         * @return builder
         * 
         */
        public Builder trafficPercent(Integer trafficPercent) {
            return trafficPercent(Output.of(trafficPercent));
        }

        public VertexModelDeploymentArgs build() {
            if ($.endpointId == null) {
                throw new MissingRequiredPropertyException("VertexModelDeploymentArgs", "endpointId");
            }
            $.machineType = Codegen.stringProp("machineType").output().arg($.machineType).def("n1-standard-2").getNullable();
            $.maxReplicas = Codegen.integerProp("maxReplicas").output().arg($.maxReplicas).def(3).getNullable();
            $.minReplicas = Codegen.integerProp("minReplicas").output().arg($.minReplicas).def(1).getNullable();
            if ($.modelArtifactsBucketUri == null) {
                throw new MissingRequiredPropertyException("VertexModelDeploymentArgs", "modelArtifactsBucketUri");
            }
            if ($.modelImageUrl == null) {
                throw new MissingRequiredPropertyException("VertexModelDeploymentArgs", "modelImageUrl");
            }
            if ($.modelPredictionInputSchemaUri == null) {
                throw new MissingRequiredPropertyException("VertexModelDeploymentArgs", "modelPredictionInputSchemaUri");
            }
            if ($.modelPredictionOutputSchemaUri == null) {
                throw new MissingRequiredPropertyException("VertexModelDeploymentArgs", "modelPredictionOutputSchemaUri");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("VertexModelDeploymentArgs", "projectId");
            }
            if ($.region == null) {
                throw new MissingRequiredPropertyException("VertexModelDeploymentArgs", "region");
            }
            $.trafficPercent = Codegen.integerProp("trafficPercent").output().arg($.trafficPercent).def(100).getNullable();
            return $;
        }
    }

}
