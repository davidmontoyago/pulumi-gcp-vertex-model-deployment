// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Deploys a model to a Vertex AI endpoint
 */
export class VertexModelDeployment extends pulumi.CustomResource {
    /**
     * Get an existing VertexModelDeployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VertexModelDeployment {
        return new VertexModelDeployment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp-vertex-model-deployment:resources:VertexModelDeployment';

    /**
     * Returns true if the given object is an instance of VertexModelDeployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VertexModelDeployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VertexModelDeployment.__pulumiType;
    }

    /**
     * Creation timestamp
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * ID of the deployed model
     */
    public /*out*/ readonly deployedModelId!: pulumi.Output<string>;
    /**
     * Vertex AI Endpoint ID
     */
    public readonly endpointId!: pulumi.Output<string>;
    /**
     * Full name of the endpoint
     */
    public /*out*/ readonly endpointName!: pulumi.Output<string>;
    /**
     * Labels for the deployment
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Machine type for deployment
     */
    public readonly machineType!: pulumi.Output<string | undefined>;
    /**
     * Maximum number of replicas
     */
    public readonly maxReplicas!: pulumi.Output<number | undefined>;
    /**
     * Minimum number of replicas
     */
    public readonly minReplicas!: pulumi.Output<number | undefined>;
    /**
     * Bucket URI to the model artifacts. For instance, gs://my-bucket/my-model-artifacts/ - See: https://cloud.google.com/vertex-ai/docs/training/exporting-model-artifacts
     */
    public readonly modelArtifactsBucketUri!: pulumi.Output<string>;
    /**
     * Vertex AI Image URL of a custom or prebuilt container model server. See: https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers
     */
    public readonly modelImageUrl!: pulumi.Output<string>;
    /**
     * Bucket URI to the schema for the model inference behavior
     */
    public readonly modelPredictionBehaviorSchemaUri!: pulumi.Output<string | undefined>;
    /**
     * Bucket URI to the schema for the model input
     */
    public readonly modelPredictionInputSchemaUri!: pulumi.Output<string>;
    /**
     * Bucket URI to the schema for the model output
     */
    public readonly modelPredictionOutputSchemaUri!: pulumi.Output<string>;
    /**
     * Google Cloud Project ID
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * Google Cloud region
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Service account for the deployment
     */
    public readonly serviceAccount!: pulumi.Output<string | undefined>;
    /**
     * Traffic percentage for this deployment
     */
    public readonly trafficPercent!: pulumi.Output<number | undefined>;

    /**
     * Create a VertexModelDeployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VertexModelDeploymentArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.endpointId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointId'");
            }
            if ((!args || args.modelArtifactsBucketUri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'modelArtifactsBucketUri'");
            }
            if ((!args || args.modelImageUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'modelImageUrl'");
            }
            if ((!args || args.modelPredictionInputSchemaUri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'modelPredictionInputSchemaUri'");
            }
            if ((!args || args.modelPredictionOutputSchemaUri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'modelPredictionOutputSchemaUri'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            resourceInputs["endpointId"] = args ? args.endpointId : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["machineType"] = (args ? args.machineType : undefined) ?? "n1-standard-2";
            resourceInputs["maxReplicas"] = (args ? args.maxReplicas : undefined) ?? 3;
            resourceInputs["minReplicas"] = (args ? args.minReplicas : undefined) ?? 1;
            resourceInputs["modelArtifactsBucketUri"] = args ? args.modelArtifactsBucketUri : undefined;
            resourceInputs["modelImageUrl"] = args ? args.modelImageUrl : undefined;
            resourceInputs["modelPredictionBehaviorSchemaUri"] = args ? args.modelPredictionBehaviorSchemaUri : undefined;
            resourceInputs["modelPredictionInputSchemaUri"] = args ? args.modelPredictionInputSchemaUri : undefined;
            resourceInputs["modelPredictionOutputSchemaUri"] = args ? args.modelPredictionOutputSchemaUri : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["serviceAccount"] = args ? args.serviceAccount : undefined;
            resourceInputs["trafficPercent"] = (args ? args.trafficPercent : undefined) ?? 100;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["deployedModelId"] = undefined /*out*/;
            resourceInputs["endpointName"] = undefined /*out*/;
        } else {
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["deployedModelId"] = undefined /*out*/;
            resourceInputs["endpointId"] = undefined /*out*/;
            resourceInputs["endpointName"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["machineType"] = undefined /*out*/;
            resourceInputs["maxReplicas"] = undefined /*out*/;
            resourceInputs["minReplicas"] = undefined /*out*/;
            resourceInputs["modelArtifactsBucketUri"] = undefined /*out*/;
            resourceInputs["modelImageUrl"] = undefined /*out*/;
            resourceInputs["modelPredictionBehaviorSchemaUri"] = undefined /*out*/;
            resourceInputs["modelPredictionInputSchemaUri"] = undefined /*out*/;
            resourceInputs["modelPredictionOutputSchemaUri"] = undefined /*out*/;
            resourceInputs["projectId"] = undefined /*out*/;
            resourceInputs["region"] = undefined /*out*/;
            resourceInputs["serviceAccount"] = undefined /*out*/;
            resourceInputs["trafficPercent"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VertexModelDeployment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a VertexModelDeployment resource.
 */
export interface VertexModelDeploymentArgs {
    /**
     * Vertex AI Endpoint ID
     */
    endpointId: pulumi.Input<string>;
    /**
     * Labels for the deployment
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Machine type for deployment
     */
    machineType?: pulumi.Input<string>;
    /**
     * Maximum number of replicas
     */
    maxReplicas?: pulumi.Input<number>;
    /**
     * Minimum number of replicas
     */
    minReplicas?: pulumi.Input<number>;
    /**
     * Bucket URI to the model artifacts. For instance, gs://my-bucket/my-model-artifacts/ - See: https://cloud.google.com/vertex-ai/docs/training/exporting-model-artifacts
     */
    modelArtifactsBucketUri: pulumi.Input<string>;
    /**
     * Vertex AI Image URL of a custom or prebuilt container model server. See: https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers
     */
    modelImageUrl: pulumi.Input<string>;
    /**
     * Bucket URI to the schema for the model inference behavior
     */
    modelPredictionBehaviorSchemaUri?: pulumi.Input<string>;
    /**
     * Bucket URI to the schema for the model input
     */
    modelPredictionInputSchemaUri: pulumi.Input<string>;
    /**
     * Bucket URI to the schema for the model output
     */
    modelPredictionOutputSchemaUri: pulumi.Input<string>;
    /**
     * Google Cloud Project ID
     */
    projectId: pulumi.Input<string>;
    /**
     * Google Cloud region
     */
    region: pulumi.Input<string>;
    /**
     * Service account for the deployment
     */
    serviceAccount?: pulumi.Input<string>;
    /**
     * Traffic percentage for this deployment
     */
    trafficPercent?: pulumi.Input<number>;
}
